{"version":3,"sources":["assets/twitter-logo.svg","components/Footer.jsx","components/Header.jsx","App.js","index.js"],"names":["TWITTER_HANDLE","TWITTER_LINK","Footer","className","alt","src","twitterLogo","href","target","rel","Header","CONTRACT_ADDRESS","App","useState","currentAccount","setCurrentAccount","isMining","setIsMining","checkIfWalletIsConnected","a","window","ethereum","console","log","request","method","accounts","length","setupEventListener","connectWallet","alert","provider","ethers","providers","Web3Provider","signer","getSigner","Contract","myEpicNFT","abi","on","from","itemId","toNumber","error","askContractToMintNFT","contract","makeAnEpicNFT","txn","wait","hash","useEffect","onClick","class","type","disabled","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c012724.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter-logo.a8a75254.svg\";","import React from \"react\";\nimport twitterLogo from \"../assets/twitter-logo.svg\";\n\nconst TWITTER_HANDLE = \"shryasss\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-container\">\n      <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n      <a\n        className=\"footer-text\"\n        href={TWITTER_LINK}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >{`built on @${TWITTER_HANDLE}`}</a>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div>\n      <p className=\"header gradient-text\">My NFT Collection</p>\n      <p className=\"sub-text\">\n        Each unique. Each beautiful. Discover your NFT today.\n      </p>\n    </div>\n  );\n};\n\nexport default Header;\n","import \"./styles/App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport myEpicNFT from \"./utils/MyEpicNFT.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\n\n// Constants\nconst OPENSEA_LINK =\n  \"https://testnets.opensea.io/collection/squarenft-9sbhj0ixm7\";\nconst TOTAL_MINT_COUNT = 50;\nconst CONTRACT_ADDRESS = \"0x75469a9e4987071566F9838767965e73F6D17B41\";\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [isMining, setIsMining] = useState(false);\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n    if (!ethereum) {\n      console.log(\"Make sure you have Metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object -- \", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n    if (accounts.length !== 0) {\n      console.log(`Authorized account found.`);\n      console.log(`Found account with address -- ${accounts[0]}`);\n      setCurrentAccount(accounts[0]);\n    } else {\n      console.log(`No Authorized account found :(`);\n    }\n    setupEventListener();\n  };\n\n  const connectWallet = async () => {\n    const { ethereum } = window;\n    if (!ethereum) {\n      alert(\"Make sure you have Metamask!\");\n      return;\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n    if (accounts.length !== 0) {\n      console.log(`Authorized account found.`);\n      console.log(`Connected to -- ${accounts[0]}`);\n      setCurrentAccount(accounts[0]);\n    } else {\n      console.log(`No Authorized account found :(`);\n    }\n    setupEventListener();\n  };\n\n  const setupEventListener = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CONTRACT_ADDRESS,\n          myEpicNFT.abi,\n          signer\n        );\n\n        contract.on(\"NewEpicNFTMinted\", (from, itemId) => {\n          console.log(from, itemId.toNumber());\n          alert(\n            `Hey there! We've minted your NFT. It may be blank right now. \n            It can take a max of 10 min to show up on OpenSea. Here's the link: \n            https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${itemId.toNumber()}`\n          );\n        });\n\n        console.log(\"Setup event listener!\");\n      } else {\n        console.log(\"Ethereum object not found\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const askContractToMintNFT = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          CONTRACT_ADDRESS,\n          myEpicNFT.abi,\n          signer\n        );\n\n        const txn = await contract.makeAnEpicNFT();\n        setIsMining(true);\n        console.log(`Mining...`);\n\n        await txn.wait();\n        setIsMining(false);\n        console.log(\n          `Mined, see transaction: https://rinkeby.etherscan.io/tx/${txn.hash}`\n        );\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Render Methods\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  const renderMintUI = () => (\n    <div>\n      <button className=\"cta-button mint-button\" onClick={askContractToMintNFT}>\n        Mint NFT\n      </button>\n    </div>\n  );\n\n  const renderMiningUI = () => (\n    <button class=\"cta-button mint-button m-3\" type=\"button\" disabled>\n      <span\n        class=\"spinner-grow spinner-grow-sm mx-2\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      ></span>\n      Mining...\n    </button>\n  );\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <Header />\n          <button className=\"cta-button opensea-button mb-3\" href>\n            <a className=\"text-light\" href={OPENSEA_LINK}>\n              ðŸŒŠ View Collection on OpenSea\n            </a>\n          </button>\n          {currentAccount === \"\" ? renderNotConnectedContainer() : null}\n          {isMining ? renderMiningUI() : renderMintUI()}\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}